plot(trapezoid_moderate)
plot(trapezoid_high)
# Trapezoid
x <- seq(from=0, to=1, by=0.01)
density_high <- dtrapezoid(x, min = 0.60, mode1 = 0.80, mode2 = 1, max = 1, n1 = 2, n3 = 2, alpha = 1)
trapezoid_high <- ggplot(data = data.frame(x, density_high),
aes(x = x, y = density_high)) + geom_line() + theme_bw()
density_moderate <- dtrapezoid(x, min = 0.30, mode1 = 0.45, mode2 = 0.55, max = 0.75, n1 = 2, n3 = 2, alpha = 1)
trapezoid_moderate <- ggplot(data = data.frame(x, density_moderate),
aes(x = x, y = density_moderate)) + geom_line() + theme_bw()
density_low <- dtrapezoid(x, min = 0, mode1 = 0, mode2 = 0.25, max = 0.35, n1 = 2, n3 = 2, alpha = 1)
trapezoid_low <- ggplot(data = data.frame(x, density_low),
aes(x = x, y = density_low)) + geom_line() + theme_bw()
print(density_low)
print(trapezoid_moderate)
print(trapezoid_high)
# Trapezoid
x <- seq(from=0, to=1, by=0.01)
density_high <- dtrapezoid(x, min = 0.60, mode1 = 0.80, mode2 = 1, max = 1, n1 = 2, n3 = 2, alpha = 1)
trapezoid_high <- ggplot(data = data.frame(x, density_high),
aes(x = x, y = density_high)) + geom_line() + theme_bw()
density_moderate <- dtrapezoid(x, min = 0.30, mode1 = 0.45, mode2 = 0.55, max = 0.75, n1 = 2, n3 = 2, alpha = 1)
trapezoid_moderate <- ggplot(data = data.frame(x, density_moderate),
aes(x = x, y = density_moderate)) + geom_line() + theme_bw()
density_low <- dtrapezoid(x, min = 0, mode1 = 0, mode2 = 0.25, max = 0.35, n1 = 2, n3 = 2, alpha = 1)
trapezoid_low <- ggplot(data = data.frame(x, density_low),
aes(x = x, y = density_low)) + geom_line() + theme_bw()
print(density_low)
print(trapezoid_moderate)
print(trapezoid_high)
# Trapezoid
x <- seq(from=0, to=1, by=0.01)
density_high <- dtrapezoid(x, min = 0.60, mode1 = 0.80, mode2 = 1, max = 1, n1 = 2, n3 = 2, alpha = 1)
trapezoid_high <- ggplot(data = data.frame(x, density_high),
aes(x = x, y = density_high)) + geom_line() + theme_bw()
density_moderate <- dtrapezoid(x, min = 0.30, mode1 = 0.45, mode2 = 0.55, max = 0.75, n1 = 2, n3 = 2, alpha = 1)
trapezoid_moderate <- ggplot(data = data.frame(x, density_moderate),
aes(x = x, y = density_moderate)) + geom_line() + theme_bw()
density_low <- dtrapezoid(x, min = 0, mode1 = 0, mode2 = 0.25, max = 0.35, n1 = 2, n3 = 2, alpha = 1)
trapezoid_low <- ggplot(data = data.frame(x, density_low),
aes(x = x, y = density_low)) + geom_line() + theme_bw()
print(trapezoid_low)
print(trapezoid_moderate)
print(trapezoid_high)
df <- data.frame(x, density_moderate, density_high)
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=density_moderate), colour="red") +  # first layer
geom_line(aes(y=density_high), colour="green") +
geom_line(aes(y=density_low), colour="blue")
# Trapezoid
x <- seq(from=0, to=1, by=0.01)
density_high <- dtrapezoid(x, min = 0.60, mode1 = 0.80, mode2 = 1, max = 1, n1 = 2, n3 = 2, alpha = 1)
trapezoid_high <- ggplot(data = data.frame(x, density_high),
aes(x = x, y = density_high)) + geom_line() + theme_bw()
density_moderate <- dtrapezoid(x, min = 0.25, mode1 = 0.45, mode2 = 0.55, max = 0.75, n1 = 2, n3 = 2, alpha = 1)
trapezoid_moderate <- ggplot(data = data.frame(x, density_moderate),
aes(x = x, y = density_moderate)) + geom_line() + theme_bw()
density_low <- dtrapezoid(x, min = 0, mode1 = 0, mode2 = 0.25, max = 0.35, n1 = 2, n3 = 2, alpha = 1)
trapezoid_low <- ggplot(data = data.frame(x, density_low),
aes(x = x, y = density_low)) + geom_line() + theme_bw()
print(trapezoid_low)
print(trapezoid_moderate)
print(trapezoid_high)
df <- data.frame(x, density_moderate, density_high)
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=density_moderate), colour="red") +  # first layer
geom_line(aes(y=density_high), colour="green") +
geom_line(aes(y=density_low), colour="blue")
# Trapezoid
x <- seq(from=0, to=100, by=1)
density_high <- dtrapezoid(x, min = 60, mode1 = 80, mode2 = 100, max = 100, n1 = 2, n3 = 2, alpha = 1)
trapezoid_high <- ggplot(data = data.frame(x, density_high),
aes(x = x, y = density_high)) + geom_line() + theme_bw()
density_moderate <- dtrapezoid(x, min = 25, mode1 = 45, mode2 = 55, max = 75, n1 = 2, n3 = 2, alpha = 1)
trapezoid_moderate <- ggplot(data = data.frame(x, density_moderate),
aes(x = x, y = density_moderate)) + geom_line() + theme_bw()
density_low <- dtrapezoid(x, min = 0, mode1 = 0, mode2 = 25, max = 35, n1 = 2, n3 = 2, alpha = 1)
trapezoid_low <- ggplot(data = data.frame(x, density_low),
aes(x = x, y = density_low)) + geom_line() + theme_bw()
print(trapezoid_low)
print(trapezoid_moderate)
print(trapezoid_high)
df <- data.frame(x, density_moderate, density_high)
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=density_moderate), colour="red") +  # first layer
geom_line(aes(y=density_high), colour="green") +
geom_line(aes(y=density_low), colour="blue")
sample_trapezoid <- function(linguistic_value) {
if(linguistic_value == "High") {
return(rtrapezoid(1, min = 60, mode1 = 80, mode2 = 100, max = 100, n1 = 2, n3 = 2, alpha = 1))
}
else if(linguistic_value == "Moderate") {
return(rtrapezoid(1, min = 25, mode1 = 45, mode2 = 55, max = 75, n1 = 2, n3 = 2, alpha = 1))
}
else if(linguistic_value == "Low") {
return(rtrapezoid(1, min = 0, mode1 = 0, mode2 = 25, max = 35, n1 = 2, n3 = 2, alpha = 1))
}
}
sample_trapezoid("Low")
sample_trapezoid("High")
sample_trapezoid("Moderate")
sample_trapezoid("Moderate")
sample_trapezoid("Moderate")
sample_trapezoid("Moderate")
sample_trapezoid("Moderate")
sample_trapezoid("Moderate")
sample_trapezoid("Moderate")
sample_trapezoid("Moderate")
sample_trapezoid("Moderate")
sample_trapezoid("Moderate")
sample_trapezoid("Low")
sample_trapezoid("Low")
sample_trapezoid("Low")
sample_trapezoid("Low")
sample_trapezoid("Low")
sample_trapezoid("Low")
sample_trapezoid("Low")
sample_trapezoid("Low")
sample_trapezoid("Low")
sample_trapezoid("Low")
sample_trapezoid("High")
sample_trapezoid("High")
sample_trapezoid("High")
sample_trapezoid("High")
sample_trapezoid("High")
sample_trapezoid("High")
sample_trapezoid("High")
sample_trapezoid("High")
sample_trapezoid("High")
sample_trapezoid("High")
sample_trapezoid("High")
sample_trapezoid("High")
for_anfis_data <- read.csv("Google Drive/My Drive/Research/DTI_Research/DTI_cleaned_dataset_for_classification.csv")
for_anfis_data <- read.csv("/Google Drive/My Drive/Research/DTI_Research/DTI_cleaned_dataset_for_classification.csv")
for_anfis_data <- read.csv("DTI_cleaned_dataset_for_classification.csv")
View(for_anfis_data)
View(for_anfis_data)
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
View(for_anfis_dataset)
View(for_anfis_dataset)
View(for_anfis_data)
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
setNames(c(0, 1, 2), c('Moderate', 'High', 'Low'))[for_anfis_dataset$Class]
View(for_anfis_dataset)
View(for_anfis_dataset)
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
for_anfis_dataset$Class_New <- setNames(c(0, 1, 2), c('Moderate', 'High', 'Low'))[for_anfis_dataset$Class]
View(for_anfis_data)
View(for_anfis_dataset)
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
new_class <- setNames(c(0, 1, 2), c('Moderate', 'High', 'Low'))[for_anfis_dataset$Class]
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
setNames(c(0, 1, 2), c('Moderate', 'High', 'Low'))[for_anfis_dataset$Class]
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
setNames(c(0, 1, 2), c('Moderate', 'High', 'Low'))[for_anfis_dataset$Class];
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
setNames(c(0, 1, 2), c('Moderate', 'High', 'Low'))[for_anfis_dataset$Class]
sample_trapezoid(for_anfis_dataset$Class[1])
sample_trapezoid(for_anfis_dataset$Class[1])
for_anfis_dataset$Class[1]
View(df)
View(df)
View(for_anfis_dataset)
View(for_anfis_dataset)
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
setNames(c(0, 1, 2), c('Moderate', 'High', 'Low'))[for_anfis_dataset$Class]
for_anfis_dataset <- for_anfis_dataset %>%
mutate(Class = recode(Class, 0 = 'Moderate', 1 = 'High', 2 =  'Low' ))
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
setNames(c(0, 1, 2), c('Moderate', 'High', 'Low'))[for_anfis_dataset$Class]
for_anfis_dataset <- for_anfis_dataset %>%
mutate(Class = recode(Class, '0' = 'Moderate', '1' = 'High', '2' =  'Low' ))
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
setNames(c('Moderate', 'High', 'Low'), c(0, 1, 2))[for_anfis_dataset$Class]
View(for_anfis_dataset)
View(for_anfis_dataset)
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
setNames(c('Moderate', 'High', 'Low'), c(0, 1, 2))[for_anfis_dataset$Class]
sample_trapezoid <- function(linguistic_value) {
if(linguistic_value == "High") {
return(rtrapezoid(1, min = 60, mode1 = 80, mode2 = 100, max = 100, n1 = 2, n3 = 2, alpha = 1))
}
else if(linguistic_value == "Moderate") {
return(rtrapezoid(1, min = 25, mode1 = 45, mode2 = 55, max = 75, n1 = 2, n3 = 2, alpha = 1))
}
else if(linguistic_value == "Low") {
return(rtrapezoid(1, min = 0, mode1 = 0, mode2 = 25, max = 35, n1 = 2, n3 = 2, alpha = 1))
}
}
class_rename <- function(val) {
if(val == 0) {
return('Moderate')
}
else if(val == 1) {
return('High')
}
else if(val == 2) {
return('Low')
}
}
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
for_anfis_dataset$New_Class <- map(for_anfis_dataset$Class, class_rename)
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
for_anfis_dataset$New_Class <- map(.for_anfis_dataset$Class, .class_rename)
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
for_anfis_dataset$New_Class <- for_anfis_dataset$Class %>%
map(class_rename)
sample_trapezoid <- function(linguistic_value) {
if(linguistic_value == "High") {
return(rtrapezoid(1, min = 60, mode1 = 80, mode2 = 100, max = 100, n1 = 2, n3 = 2, alpha = 1))
}
else if(linguistic_value == "Moderate") {
return(rtrapezoid(1, min = 25, mode1 = 45, mode2 = 55, max = 75, n1 = 2, n3 = 2, alpha = 1))
}
else if(linguistic_value == "Low") {
return(rtrapezoid(1, min = 0, mode1 = 0, mode2 = 25, max = 35, n1 = 2, n3 = 2, alpha = 1))
}
}
class_rename <- function(val) {
if(val == 0) {
return('Moderate')
}
else if(val == 1) {
return('High')
}
else if(val == 2) {
return('Low')
}
}
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
for_anfis_dataset$New_Class <- for_anfis_dataset$Class %>%
map(class_rename)
for_anfis_dataset$Class
list(for_anfis_dataset$Class)
require(trapezoid)
require(plyr)
require(ggplot2)
library(tidyverse)
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
for_anfis_dataset$New_Class <- map(for_anfis_dataset$Class, class_rename)
View(for_anfis_dataset)
dataset <- read.csv("DTI_cleaned_dataset_for_classification.csv")
for_anfis_dataset <- dataset[, c("Government.Efficiency", "Resiliency", "Class")]
for_anfis_dataset$New_Class <- map(for_anfis_dataset$Class, class_rename)
for_anfis_dataset$Crisp_Class <- map(for_anfis_dataset$New_Class, sample_trapezoid)
View(for_anfis_dataset)
View(for_anfis_dataset)
final_anfis_dataset <- for_anfis_dataset[, c("Government.Efficiency", "Resiliency", "Crisp_Class")]
View(final_anfis_dataset)
View(final_anfis_dataset)
write.csv(final_anfis_dataset, "Final_Anfis_Dataset.csv", row.names = FALSE)
View(final_anfis_dataset)
write.csv(final_anfis_dataset, "FinalAnfisDataset.csv", row.names = FALSE)
final_anfis_dataset <- apply(final_anfis_dataset,2,as.character)
write.csv(final_anfis_dataset, "FinalAnfisDataset.csv", row.names = FALSE)
sil_cl <- silhouette(cutree(hclust, h=100) ,as.dist(distance_matrix), title=title(main = 'Good'))
setwd("~/Desktop/JMA_Results")
library(TSstudio)
library(reshape2)
library("ggplot2")
DEA_ts_data <- read.csv("DEA_timeseries_covid_testing_facilities_data.csv")
dates_seq <- seq(as.Date("2020/05/13"), as.Date("2020/09/25"), "days")
DEA_ts_data_with_dates <- cbind(date=dates_seq, DEA_ts_data)
library(dtw)
library(data.table)
DEA_ts_data_transpose <- transpose(DEA_ts_data)
distance_matrix <- dist(DEA_ts_data_transpose, method="DTW")
# Hierarchical Clustering
hclust <- hclust(distance_matrix, method="ward")
plot(hclust)
summary(hclust)
hclust$order
# reduced label size
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(hclust, xlab="", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="Facilities")
axis(2)
rect.hclust(hclust , k = 4, border = 2:6)
abline(h = 110, col = 'red')
sil_cl <- silhouette(cutree(hclust, h=100) ,as.dist(distance_matrix), title=title(main = 'Good'))
library("cluster")
sil_cl <- silhouette(cutree(hclust, h=100) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(tmp)
sil_cl <- silhouette(cutree(hclust, h=100) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(distance_matrix)
plot(sil_cl)
# Hierarchical Clustering
hclust <- hclust(distance_matrix, method="ward")
plot(hclust)
summary(hclust)
hclust$order
# reduced label size
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(hclust, xlab="", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="Facilities")
axis(2)
rect.hclust(hclust , k = 4, border = 2:6)
abline(h = 50, col = 'red')
# Hierarchical Clustering
hclust <- hclust(distance_matrix, method="ward")
plot(hclust)
summary(hclust)
hclust$order
# reduced label size
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(hclust, xlab="", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="Facilities")
axis(2)
rect.hclust(hclust , k = 4, border = 2:6)
abline(h = 45, col = 'red')
# Hierarchical Clustering
hclust <- hclust(distance_matrix, method="ward")
plot(hclust)
summary(hclust)
hclust$order
# reduced label size
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(hclust, xlab="", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="Facilities")
axis(2)
rect.hclust(hclust , k = 4, border = 2:6)
abline(h = 47, col = 'red')
sil_cl <- silhouette(cutree(hclust, h=47) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(distance_matrix)
plot(sil_cl)
# Hierarchical Clustering
hclust <- hclust(distance_matrix, method="ward")
plot(hclust)
summary(hclust)
hclust$order
# reduced label size
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(hclust, xlab="", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="Facilities")
axis(2)
rect.hclust(hclust , k = 4, border = 2:6)
abline(h = 40, col = 'red')
# Hierarchical Clustering
hclust <- hclust(distance_matrix, method="ward")
plot(hclust)
summary(hclust)
hclust$order
# reduced label size
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(hclust, xlab="", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="Facilities")
axis(2)
rect.hclust(hclust , k = 5, border = 2:6)
abline(h = 40, col = 'red')
sil_cl <- silhouette(cutree(hclust, h=40) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(distance_matrix)
plot(sil_cl)
# Hierarchical Clustering
hclust <- hclust(distance_matrix, method="ward")
plot(hclust)
summary(hclust)
hclust$order
# reduced label size
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(hclust, xlab="", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="Facilities")
axis(2)
rect.hclust(hclust , k = 2, border = 2:6)
abline(h = 200, col = 'red')
sil_cl <- silhouette(cutree(hclust, h=200) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(distance_matrix)
plot(sil_cl)
sil_cl <- silhouette(cutree(hclust, h=200) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(distance_matrix)
plot(sil_cl)
sil_cl <- silhouette(cutree(hclust, h=200) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(distance_matrix)
plot(sil_cl)
sil_cl <- silhouette(cutree(hclust, h=200) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(distance_matrix)
plot(sil_cl)
sil_cl <- silhouette(cutree(hclust, h=200) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(distance_matrix)
plot(sil_cl)
sil_cl <- silhouette(cutree(hclust, h=200) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(distance_matrix)
plot(sil_cl)
sil_cl <- silhouette(cutree(hclust, h=200) ,as.dist(distance_matrix), title=title(main = 'Good'))
rownames(sil_cl) <- rownames(distance_matrix)
plot(sil_cl)
dunif()
dunif(x)
dunif(1)
dunif(0)
dunif(x)
plot(dunif(x))
rep(1, 1000)
plot(rep(1,1000))
dunif(x, 1, 5)
plot(dunif(x, 1, 5))
plot(dbin)
p_grid <- seq(from=0, to=1, length.out=1000)
prob_p <- rep(1, 1000)
prob_data <- dbinom(6, size=9, prob=p_grid)
posterior <- prob_b * prob_data
p_grid <- seq(from=0, to=1, length.out=1000)
prob_p <- rep(1, 1000)
prob_data <- dbinom(6, size=9, prob=p_grid)
posterior <- prob_p * prob_data
posterior <- posterior / sum(posterior)
p_grid <- seq(from=0, to=1, length.out=1000)
prob_p <- rep(1, 1000)
prob_data <- dbinom(6, size=9, prob=p_grid)
posterior <- prob_p * prob_data
posterior <- posterior / sum(posterior)
plot(posterior)
p_grid <- seq(from=0, to=1, length.out=1000)
prob_p <- rep(1, 1000)
prob_data <- dbinom(6, size=9, prob=p_grid)
posterior <- prob_p * prob_data
posterior <- posterior / sum(posterior)
plot(prob_p)
plot(posterior)
p_grid <- seq(from=0, to=1, length.out=1000)
prob_p <- rep(1, 1000)
prob_data <- dbinom(6, size=9, prob=p_grid)
posterior <- prob_p * prob_data
posterior <- posterior / sum(posterior)
plot(prob_p)
plot(prob_data)
plot(posterior)
dbinom(6, size-9, 0.5)
dbinom(6, size=9, 0.5)
dbinom(6, size=9, 1)
dbinom(6, size=9, 1000)
dbinom(6, size=9, 0.2)
p_grid
plot(p_grid)
p_grid <- seq(from=0, to=1, length.out=1000)
prob_p <- (1/1000) * rep(1, 1000)
prob_data <- dbinom(6, size=9, prob=p_grid)
posterior <- prob_p * prob_data
posterior <- posterior / sum(posterior)
plot(prob_p)
plot(prob_data)
plot(posterior)
p_grid <- seq(from=0, to=1, length.out=1000)
prob_p <- (1/1000) * rep(1, 1000)
prob_data <- dbinom(6, size=9, prob=p_grid)
posterior <- prob_p * prob_data
posterior <- posterior / sum(posterior)
plot(prob_p)
plot(prob_data)
plot(posterior)
p_grid <- seq(from=0, to=1, length.out=1000)
prob_p <- (1/1000) * rep(1, 1000)
prob_data <- dbinom(6, size=9, prob=p_grid)
posterior_1 <- prob_p * prob_data
posterior_1 <- posterior_1 / sum(posterior_1)
plot(prob_p)
plot(prob_data)
plot(posterior_1)
p_grid <- seq(from=0, to=1, length.out=1000)
prob_p <- (1/1000) * rep(1, 1000)
prob_data <- dbinom(6, size=9, prob=p_grid)
posterior_2 <- posterior_1 * prob_data
posterior_2 <- posterior_2 / sum(posterior_2)
plot(posterior_1)
plot(prob_data)
plot(posterior_2)
p_grid <- seq(from=0, to=1, length.out=1000)
prob_p <- (1/1000) * rep(1, 1000)
prob_data <- dbinom(6, size=9, prob=p_grid)
posterior_3 <- posterior_2 * prob_data
posterior_3 <- posterior_3 / sum(posterior_3)
plot(posterior_2)
plot(prob_data)
plot(posterior_3)
dataset <- read.csv("heart_atk.csv")
setwd("~/CoursePacks/CMSC173/Machine Problems")
dataset <- read.csv("heart_atk.csv")
dataset <- read.csv("heart_atk.csv")
age <- dataset$age
library("dplyr")
library("ggpubr")
shapiro.test(age)
library("dplyr")
library("ggpubr")
shapiro.test(age)
ks.test(age)
library("dplyr")
library("ggpubr")
shapiro.test(age)
ks.test(age, "pnorm")
